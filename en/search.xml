<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CF794C Naming Company Solution</title>
      <link href="/en/2023/05/18/cf794c-naming-company-solution/"/>
      <url>/en/2023/05/18/cf794c-naming-company-solution/</url>
      
        <content type="html"><![CDATA[<h1 id="CF794C-Naming-Company-Solution"><a href="#CF794C-Naming-Company-Solution" class="headerlink" title="[CF794C Naming Company] Solution"></a>[CF794C Naming Company] Solution</h1><p>Problem link: <a href="https://www.luogu.com.cn/problem/CF794C">CF794C Naming Company</a></p><blockquote><p><strong>Problem Statement</strong>:</p><p>Here is the modified text, formatted in Markdown with inline formulas:</p><p>A and B each have a string of length $n$, consisting of lowercase letters, denoted by $s$ and $t$ respectively. There is also a target string $f$ of length $n$, initially composed of <code>?</code> symbols.</p><p>Now, A and B take turns performing the following operation:</p><ol><li>They select a character $x$ from their own string.</li><li>They replace one <code>?</code> in $f$ with $x$.</li><li>They remove $x$ from their own string.</li></ol><p>The game ends when there are no more <code>?</code> symbols in $f$.</p><p>A’s goal is to make the lexicographical order of $f$ as small as possible, while B’s goal is to make it as large as possible.</p><p>A is the first player. Your task is to determine the final string $f$ after the game ends.</p><p>Note: The strings $s$ and $t$ may contain multiple duplicate characters, and only one character can be removed at a time.</p><p><strong>Data range</strong>:</p><p>$1 \le n \le 3\times 10^5$</p></blockquote><p>One obvious greedy algorithm is for both players to fill the beginning of $f$ with characters that benefit them the most.</p><p>However, this greedy strategy is incorrect because it results in a larger answer when the smallest character chosen by A is greater than the largest character chosen by B.</p><p>So, what can we do instead? We can use a “reverse greedy strategy” in such cases, which ensures that the problematic position in $f$ is filled with a character that is not greater than the largest character chosen by B.</p><p>Time complexity: $\mathcal{O}(n)$</p><p>Code:</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;bits/stdc++.h></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">int</span> <span class="token expression"><span class="token keyword">long</span> <span class="token keyword">long</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">INF</span> <span class="token expression"><span class="token number">0x3f3f3f3f3f3f3f3f</span></span></span><span class="token keyword">void</span> <span class="token function">up</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">&amp;</span>x<span class="token punctuation">,</span><span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> x <span class="token operator">&lt;</span> y <span class="token operator">?</span> x <span class="token operator">=</span> y <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">down</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">&amp;</span>x<span class="token punctuation">,</span><span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> x <span class="token operator">></span> y <span class="token operator">?</span> x <span class="token operator">=</span> y <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">N</span> <span class="token expression"><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">3e5</span> <span class="token operator">+</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span><span class="token keyword">char</span> s<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">,</span>a<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span>b<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span>f<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">signed</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    ios<span class="token double-colon punctuation">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cin<span class="token punctuation">.</span><span class="token function">tie</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>cout<span class="token punctuation">.</span><span class="token function">tie</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// freopen("check.in","r",stdin);</span>    <span class="token comment">// freopen("check.out","w",stdout);</span>    cin <span class="token operator">>></span> <span class="token punctuation">(</span>s <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> n <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span>s <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token char">'a'</span><span class="token punctuation">;</span>    cin <span class="token operator">>></span> <span class="token punctuation">(</span>s <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> n <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span>s <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> b<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token char">'a'</span><span class="token punctuation">;</span>    <span class="token function">sort</span><span class="token punctuation">(</span>a <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> a <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> n<span class="token punctuation">,</span> <span class="token generic-function"><span class="token function">less</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">sort</span><span class="token punctuation">(</span>b <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> b <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> n<span class="token punctuation">,</span> <span class="token generic-function"><span class="token function">greater</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> pos <span class="token operator">=</span> n<span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">>=</span> b<span class="token punctuation">[</span>y <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> pos <span class="token operator">=</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>        <span class="token punctuation">(</span>i <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">(</span>f<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token operator">++</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>f<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> b<span class="token punctuation">[</span><span class="token operator">++</span>y<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    x <span class="token operator">=</span> y <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">>></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token keyword">if</span><span class="token punctuation">(</span>n <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">++</span>x<span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> n<span class="token punctuation">;</span> i <span class="token operator">></span> pos<span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token punctuation">(</span><span class="token punctuation">(</span>pos <span class="token operator">+</span> n <span class="token operator">-</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">(</span>f<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token operator">--</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>f<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> b<span class="token punctuation">[</span><span class="token operator">--</span>y<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> cout <span class="token operator">&lt;&lt;</span> <span class="token keyword">char</span><span class="token punctuation">(</span>f<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token char">'a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> cout <span class="token operator">&lt;&lt;</span> <span class="token char">'\n'</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
            <tag> String </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[CF1202E You Are Given Some Strings...] Solution</title>
      <link href="/en/2023/01/08/cf1202e-you-are-given-some-strings...solution/"/>
      <url>/en/2023/01/08/cf1202e-you-are-given-some-strings...solution/</url>
      
        <content type="html"><![CDATA[<h1 id="CF1202E-You-Are-Given-Some-Strings…-Solution"><a href="#CF1202E-You-Are-Given-Some-Strings…-Solution" class="headerlink" title="[CF1202E You Are Given Some Strings…] Solution"></a>[CF1202E You Are Given Some Strings…] Solution</h1><p>Problem Link: <a href="https://codeforces.com/contest/1202/problem/E">CF1202E You Are Given Some Strings…</a></p><blockquote><p><strong>Problem Statement</strong>:</p><p>Given a text string $t$ and $n$ pattern strings $s_i$, find</p><script type="math/tex; mode=display">\sum_{i=1}^n\sum_{j=1}^nf(s_i + s_j)</script><p>$f(s)$ is defined as the number of occurrences of $s$ in $t$, and $s_i + s_j$ is defined as the splice strings $s_i$ and $s_j$.</p><p><strong>Input</strong>:</p><p>One line $t$, one line $n$, and the next $n$ line $s_i$.</p><p><strong>Output</strong>:</p><p>Answer.</p><p><strong>Data Range</strong>:</p><p>$1\le |t|,\sum |s_i| \le 2\times 10^5$ .</p></blockquote><p>This kind of question must consider the contribution of a certain string.</p><p>Here we consider the enumeration division point $x$. Denote the point before as $s_i$ and the point after as $s_j$</p><p>Count the number of $f(x),g(x+1)$ before and after each $x$.</p><p>How do we count them? Notice that $f(x)$ is actually how many known substrings are in the suffix of $t_{1 \cdots x}$ and $g(x)$ is the reverse of $f(x)$ .</p><p>This is something that can be messed with using AC automata. That is, build the AC automaton directly on the pattern string and run $t$ through it.</p><p>Consider that the fail pointer points to the longest suffix from the root to the current string, and then the request is equivalent to the number of suffixes for the pattern string.</p><p>As we know from the AC automaton’s code, this is simply a matter of summing over the fail tree.</p><p>Time Complexity is $\mathcal{O}(\sum |s_i| \times |\Sigma|)$</p><p>Code:</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;bits/stdc++.h></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">int</span> <span class="token expression"><span class="token keyword">long</span> <span class="token keyword">long</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">INF</span> <span class="token expression"><span class="token number">0x3f3f3f3f3f3f3f3f</span></span></span><span class="token keyword">void</span> <span class="token function">up</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">&amp;</span>x<span class="token punctuation">,</span><span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> x <span class="token operator">&lt;</span> y <span class="token operator">?</span> x <span class="token operator">=</span> y <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">down</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">&amp;</span>x<span class="token punctuation">,</span><span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> x <span class="token operator">></span> y <span class="token operator">?</span> x <span class="token operator">=</span> y <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">N</span> <span class="token expression"><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">4e5</span><span class="token operator">+</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span><span class="token keyword">struct</span> <span class="token class-name">Trie</span><span class="token punctuation">&#123;</span>    queue<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> q<span class="token punctuation">;</span>    <span class="token keyword">int</span> tot<span class="token punctuation">,</span>trie<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">,</span>ed<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span>fail<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">void</span> <span class="token function">insert</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>s<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> u <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">int</span> c <span class="token operator">=</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token char">'a'</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>trie<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>c<span class="token punctuation">]</span><span class="token punctuation">)</span> trie<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>c<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">++</span>tot<span class="token punctuation">;</span>            u <span class="token operator">=</span> trie<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>c<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token operator">++</span>ed<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">void</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token number">26</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token keyword">if</span><span class="token punctuation">(</span>trie<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> q<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>trie<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> u<span class="token punctuation">;</span> <span class="token operator">!</span>q<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            u <span class="token operator">=</span> q<span class="token punctuation">.</span><span class="token function">front</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> q<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token number">26</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>trie<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token punctuation">&#123;</span>                    fail<span class="token punctuation">[</span>trie<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> trie<span class="token punctuation">[</span>fail<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                    ed<span class="token punctuation">[</span>trie<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">+=</span> ed<span class="token punctuation">[</span>fail<span class="token punctuation">[</span>trie<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> q<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>trie<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token keyword">else</span> trie<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> trie<span class="token punctuation">[</span>fail<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">void</span> <span class="token function">query</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>s<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token operator">*</span>f<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> u <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span> u <span class="token operator">=</span> trie<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token char">'a'</span><span class="token punctuation">]</span><span class="token punctuation">;</span> f<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> ed<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>tr1<span class="token punctuation">,</span>tr2<span class="token punctuation">;</span><span class="token keyword">char</span> s<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span>t<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">int</span> f<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span>g<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">signed</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    ios<span class="token double-colon punctuation">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cin<span class="token punctuation">.</span><span class="token function">tie</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>cout<span class="token punctuation">.</span><span class="token function">tie</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// freopen("check.in","r",stdin);</span>    <span class="token comment">// freopen("check.out","w",stdout);</span>    <span class="token keyword">int</span> n<span class="token punctuation">,</span>l<span class="token punctuation">;</span> cin <span class="token operator">>></span> <span class="token punctuation">(</span>t <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">>></span> n<span class="token punctuation">;</span> l <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span>t <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        cin <span class="token operator">>></span> <span class="token punctuation">(</span>s <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> tr1<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">reverse</span><span class="token punctuation">(</span>s <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> s <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token function">strlen</span><span class="token punctuation">(</span>s <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> tr2<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    tr1<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> tr2<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> tr1<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">reverse</span><span class="token punctuation">(</span>t <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> t <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> l<span class="token punctuation">)</span><span class="token punctuation">;</span> tr2<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// for(int i=1; i&lt;=l; i++) cout &lt;&lt; f1[i] &lt;&lt; " \n"[i==l];</span>    <span class="token comment">// for(int i=1; i&lt;=l; i++) cout &lt;&lt; f2[i] &lt;&lt; " \n"[i==l];</span>    <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">&lt;=</span>l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> res <span class="token operator">+=</span> f<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">*</span> g<span class="token punctuation">[</span>l <span class="token operator">-</span> i<span class="token punctuation">]</span><span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> res <span class="token operator">&lt;&lt;</span> <span class="token char">'\n'</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p><strong>References</strong>：</p><p>[1] <a href="https://www.luogu.com.cn/blog/c2522943959/solution-cf1202e">https://www.luogu.com.cn/blog/c2522943959/solution-cf1202e</a></p>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
            <tag> Data Structure </tag>
            
            <tag> String </tag>
            
            <tag> Math </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Luogu P2656 采蘑菇] Solution</title>
      <link href="/en/2023/01/06/luogu-p2656-cai-mo-gu-solution/"/>
      <url>/en/2023/01/06/luogu-p2656-cai-mo-gu-solution/</url>
      
        <content type="html"><![CDATA[<h1 id="Luogu-P2656-采蘑菇-Solution"><a href="#Luogu-P2656-采蘑菇-Solution" class="headerlink" title="[Luogu P2656 采蘑菇] Solution"></a>[Luogu P2656 采蘑菇] Solution</h1><p>Problem Link: <a href="https://www.luogu.com.cn/problem/P2656">P2656 采蘑菇</a></p><blockquote><p><strong>Problem Statement</strong>:</p><p>q779 and cxy are going to a forest to pick mushrooms.</p><p>There are $N$ bushes in the forest and $M$ trails, each of which is a one-way path connecting two bushes with a certain number of mushrooms. q779 and cxy can pick all the mushrooms on a path by passing it once. Since the forest is a magically fertile land, after the mushrooms on a path are picked, new mushrooms will grow, multiplying the number of mushrooms by the “recovery factor” of the path $c$ and rounding down.</p><p>For example, if there are $4$ mushrooms on a path and the “recovery factor” of the path is $c = 0.7$, then the number of mushrooms that can be picked from the first to the fourth time through the path is $4,2,1,0$ respectively.</p><p>Now, q779 and cxy start from bush $S$ and find the maximum number of mushrooms they can pick.</p><p><strong>Input</strong>:</p><p>Two integers, $N$ and $M$, in the first row.</p><p>The second to $M+1$ rows, four numbers per row, denote the starting point, the ending point, the initial number of mushrooms and the recovery factor of a trail, respectively.</p><p>In the $M+2$ th row, an integer $S$.</p><p><strong>Output</strong>:</p><p>One integer in a row indicates the maximum number of mushrooms that can be picked, ensuring that the answer does not exceed $2^{31}-1$.</p><p><strong>Data range</strong>:</p><p>$1 \le N\le 8\times 10^4,~1\le M\le 2\times 10^5,~0\le c\le 0.8$ and up to one decimal, $1\le S\le N$.</p></blockquote><p>The first problem solution after the resurrection, <del>also a warm-up question</del>. </p><p>Anyway, may my dream come true in NOIP.</p><p>Notice that an edge can be walked an infinite number of times, </p><p>then any strongly connected component can be walked until it does not grow mushrooms.</p><p>Consider shrinking points and preprocessing the answer for each strongly connected component</p><p>Then it becomes simple “do topo+dp on DAG”</p><p>The time complexity is $\mathcal{O}(m \log_{\frac{4}{5}} M)$, in short, can be passed.</p><p>code:</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;bits/stdc++.h></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">int</span> <span class="token expression"><span class="token keyword">long</span> <span class="token keyword">long</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">INF</span> <span class="token expression"><span class="token number">0x3f3f3f3f3f3f3f3f</span></span></span><span class="token keyword">void</span> <span class="token function">up</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">&amp;</span>x<span class="token punctuation">,</span><span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> x <span class="token operator">&lt;</span> y <span class="token operator">?</span> x <span class="token operator">=</span> y <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">down</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">&amp;</span>x<span class="token punctuation">,</span><span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> x <span class="token operator">></span> y <span class="token operator">?</span> x <span class="token operator">=</span> y <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">N</span> <span class="token expression"><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">8e4</span> <span class="token operator">+</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">M</span> <span class="token expression"><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">2e5</span> <span class="token operator">+</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span><span class="token keyword">int</span> n<span class="token punctuation">,</span>m<span class="token punctuation">,</span>s<span class="token punctuation">,</span>pos<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>scnt<span class="token punctuation">,</span>stktop<span class="token punctuation">,</span>head<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span>f<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span>g<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> dfn<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span>low<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span>stk<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span>scc<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span>val<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span> bitset<span class="token operator">&lt;</span>N<span class="token operator">></span> ins<span class="token punctuation">;</span><span class="token keyword">struct</span> <span class="token class-name">Edge</span> <span class="token punctuation">&#123;</span> <span class="token keyword">int</span> u<span class="token punctuation">,</span>v<span class="token punctuation">,</span>w<span class="token punctuation">,</span>c<span class="token punctuation">,</span>next<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> e<span class="token punctuation">[</span>M<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">addEdge</span><span class="token punctuation">(</span><span class="token keyword">int</span> u<span class="token punctuation">,</span><span class="token keyword">int</span> v<span class="token punctuation">,</span><span class="token keyword">int</span> w<span class="token punctuation">,</span><span class="token keyword">double</span> c<span class="token punctuation">)</span><span class="token punctuation">&#123;</span> e<span class="token punctuation">[</span><span class="token operator">++</span>pos<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>u<span class="token punctuation">,</span>v<span class="token punctuation">,</span>w<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>c <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>head<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span> head<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">=</span> pos<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">Tarjan</span><span class="token punctuation">(</span><span class="token keyword">int</span> u<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">static</span> <span class="token keyword">int</span> tim <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    dfn<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">=</span> low<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">++</span>tim<span class="token punctuation">;</span> ins<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> stk<span class="token punctuation">[</span><span class="token operator">++</span>stktop<span class="token punctuation">]</span> <span class="token operator">=</span> u<span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span>head<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">;</span> i<span class="token punctuation">;</span> i<span class="token operator">=</span>e<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>next<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> v <span class="token operator">=</span> e<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>v<span class="token punctuation">;</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>dfn<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token function">Tarjan</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">down</span><span class="token punctuation">(</span>low<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">,</span> low<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>ins<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token function">down</span><span class="token punctuation">(</span>low<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">,</span> dfn<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>dfn<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">==</span> low<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token operator">++</span>scnt<span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> p <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> p <span class="token operator">!=</span> u<span class="token punctuation">;</span> <span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span> p <span class="token operator">=</span> stk<span class="token punctuation">[</span>stktop<span class="token operator">--</span><span class="token punctuation">]</span><span class="token punctuation">;</span> ins<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> scc<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">=</span> scnt<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">signed</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    ios<span class="token double-colon punctuation">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cin<span class="token punctuation">.</span><span class="token function">tie</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>cout<span class="token punctuation">.</span><span class="token function">tie</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// freopen("check.in","r",stdin);</span>    <span class="token comment">// freopen("check.out","w",stdout);</span>    cin <span class="token operator">>></span> n <span class="token operator">>></span> m<span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>u<span class="token punctuation">,</span>v<span class="token punctuation">,</span>w<span class="token punctuation">;</span> i<span class="token operator">&lt;=</span>m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">static</span> <span class="token keyword">double</span> c<span class="token punctuation">;</span>        cin <span class="token operator">>></span> u <span class="token operator">>></span> v <span class="token operator">>></span> w <span class="token operator">>></span> c<span class="token punctuation">;</span> <span class="token function">addEdge</span><span class="token punctuation">(</span>u<span class="token punctuation">,</span>v<span class="token punctuation">,</span>w<span class="token punctuation">,</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    cin <span class="token operator">>></span> s<span class="token punctuation">;</span> <span class="token function">Tarjan</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>    pos <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> head<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> m<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> u <span class="token operator">=</span> scc<span class="token punctuation">[</span>e<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>u<span class="token punctuation">]</span><span class="token punctuation">,</span> v <span class="token operator">=</span> scc<span class="token punctuation">[</span>e<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>v<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>u <span class="token operator">&amp;&amp;</span> v<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>u <span class="token operator">!=</span> v<span class="token punctuation">)</span> <span class="token function">addEdge</span><span class="token punctuation">(</span>u<span class="token punctuation">,</span>v<span class="token punctuation">,</span>e<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>w<span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">else</span> <span class="token keyword">while</span><span class="token punctuation">(</span>e<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>w<span class="token punctuation">)</span><span class="token punctuation">&#123;</span> g<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">+=</span> e<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>w<span class="token punctuation">;</span> e<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>w <span class="token operator">=</span> e<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>w <span class="token operator">*</span> e<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>c <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token comment">// for(int i=1; i&lt;=scnt; i++) cout &lt;&lt; f[i] &lt;&lt; " \n"[i==scnt];</span>    <span class="token comment">// for(int i=2; i&lt;=pos; i++) cout &lt;&lt; e[i].u &lt;&lt; ' ' &lt;&lt; e[i].v &lt;&lt; ' ' &lt;&lt; e[i].w &lt;&lt; '\n';</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> u <span class="token operator">=</span> scnt<span class="token punctuation">;</span> u<span class="token punctuation">;</span> u<span class="token operator">--</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>f<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">)</span> f<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">=</span> g<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span>head<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">;</span> i<span class="token punctuation">;</span> i<span class="token operator">=</span>e<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>next<span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span> <span class="token keyword">int</span> v <span class="token operator">=</span> e<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>v<span class="token punctuation">;</span> <span class="token function">up</span><span class="token punctuation">(</span>f<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">,</span> f<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">+</span> e<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>w <span class="token operator">+</span> g<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token operator">*</span><span class="token function">max_element</span><span class="token punctuation">(</span>f <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> f <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> scnt<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token char">'\n'</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>It is a bit difficult to translate the solution into English, but I will try.</p><p><del>There was a phrase here in the Chinese solution, but I’m not going to translate it</del>.</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
            <tag> Graph Theory </tag>
            
            <tag> Dynamic Programming </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>The equation of a circle</title>
      <link href="/en/2022/12/09/the-equation-of-a-circle/"/>
      <url>/en/2022/12/09/the-equation-of-a-circle/</url>
      
        <content type="html"><![CDATA[<h1 id="The-equation-of-a-circle"><a href="#The-equation-of-a-circle" class="headerlink" title="The equation of a circle"></a>The equation of a circle</h1><p>采用 DeepL 翻译，目前的问题是中文的句子我是凑好宽度写的，但是英文没有。</p><p>可能会在将来的版本中解决这个问题。</p><p>Using DeepL to translate, the current problem is that the Chinese sentences I am putting together are written with good width, but the English is not. I will probably fix this problem in a future version.</p><h2 id="I-Standard-equation-of-a-circle"><a href="#I-Standard-equation-of-a-circle" class="headerlink" title="I. Standard equation of a circle"></a>I. Standard equation of a circle</h2><p>In a plane right angle coordinate system, if the coordinates of the center and radius of a circle are determined, the circle is uniquely determined.</p><p>Then the standard equation of a circle with $(a,b)$ as the center and $r$ as the radius is $(x - a)^2 + (y - b)^2 = r^2 ~(r &gt; 0)$ </p><p>In particular, the unit circle is $x^2 + y^2 = r^2$.</p><hr><h2 id="II-General-equation-of-a-circle"><a href="#II-General-equation-of-a-circle" class="headerlink" title="II. General equation of a circle"></a>II. General equation of a circle</h2><p>The equation $x^2+y^2+D x+E y+F=0\left(D^2+E^2-4 F&gt;0\right)$ is called the general equation of a circle.</p><p>Converted to the standard equation as</p><script type="math/tex; mode=display">\left(x+\frac{D}{2}\right)^2+\left(y+\frac{E}{2}\right)^2=\frac{D^2+E^2-4 F}{4}</script><ul><li><p>When $D^2+E^2-4 F&gt;0$, $x^2+y^2+D x+E y+F=0$ represents a circle.</p><p>At this point the center of the circle is $\left(-\frac{D}{2},-\frac{E}{2}\right)$ and the radius of the circle is $\frac{\sqrt{D^2+E^2-4 F}}{2}$.</p></li><li><p>When $D^2+E^2-4 F=0$, $x^2+y^2+D x+E y+F=0$ denotes a point $\left(-\frac{D}{2},-\frac{E}{2}\right)$.</p></li><li>When $D^2+E^2-4 F&lt;0$, $x^2+y^2+D x+E y+F=0$ does not represent any graph.</li></ul><p>From the form of the equation, we know that the general equation of a circle contains three letters</p><p>Therefore, under general conditions, the general equation of the circle can be solved by always three independent conditions.</p><p>The following cases are more applicable to the general equation of a circle.</p><ol><li><p>Find the coefficients $D,E,F$ by substituting the coordinates of three points on a circle into the general equation of the circle.</p></li><li><p>The two points on the circle and the line where the center of the circle is located are known</p><p>Consider substituting two points into the equation of a circle by substituting the center of the circle $\left(-\frac{D}{2},-\frac{E}{2}\right)$ into the equation of the line in which the center of the circle lies and finding the coefficients $D,E,F$ to be determined.</p></li></ol><p><img src="https://raw.githubusercontent.com/q779/blog-img/main/img/202212031135323.png" style="zoom:30%;" /></p><p><strong>Expand</strong>.</p><p>The relationship between the quadratic equation and the equation of a circle.</p><p>The binary quadratic equation $A x^2+B x y+C y^2+D x+E y+F=0$ forms a circle under the condition that</p><script type="math/tex; mode=display">\begin{cases}A=C \neq 0\\\[6pt]B=0\\\[6pt]\left(\dfrac{D}{A}\right)^2+\left(\dfrac{E}{A}\right)^2-4\left(\dfrac{F}{A}\right)>0\end{cases}</script><hr><h2 id="III-Position-relationship-between-points-and-circles"><a href="#III-Position-relationship-between-points-and-circles" class="headerlink" title="III. Position relationship between points and circles"></a>III. Position relationship between points and circles</h2><p><img src="https://raw.githubusercontent.com/q779/blog-img/main/img/202212041329519.png" style="zoom:33%;" /></p><p>Judgment method.</p><ol><li><p>Geometric method: i.e., determine the relationship between $r$ and $|OA|$ in terms of magnitude.</p></li><li><p>Algebraic method: Judging from the relationship between the coordinates of a point and the equation of a circle</p><p>Standard equation: The point $P(x_0,y_0)$ is known and the equation of the circle $(x-a)^2+(y-b)^2=r^2$</p><ul><li>The point $P$ is outside the circle, then $(x-a)^2+(y-b)^2 &gt; r^2$.</li><li>The point $P$ is on the circle, then $(x-a)^2+(y-b)^2 = r^2$.</li><li><p>The point $P$ is inside the circle, then $(x-a)^2+(y-b)^2 &lt; r^2$</p><p>General equation: The point $P(x_0,y_0)$ is known and the equation of the circle $x^2+y^2+D x+E y+F=0$</p></li><li><p>The point $P$ is outside the circle, then $x^2+y^2+D x+E y+F &gt; 0$.</p></li><li>The point $P$ is on the circle, then $x^2+y^2+D x+E y+F = 0$.</li><li>The point $P$ is inside the circle, then $x^2+y^2+D x+E y+F &lt; 0$</li></ul></li></ol><hr><h2 id="IV-Symmetry-problems-related-to-circles"><a href="#IV-Symmetry-problems-related-to-circles" class="headerlink" title="IV. Symmetry problems related to circles"></a>IV. Symmetry problems related to circles</h2><p>Axial symmetry of a circle: the circle is symmetric about the line where the diameter is located.</p><p>The circle is symmetric about the point.</p><ol><li><p>To find a circle with known circle symmetry about a point, you only need to determine the location of the center of the circle you are looking for.</p></li><li><p>If two circles are symmetric about a point, then this point is the midpoint of the line connecting the centers of the two circles.</p></li><li><p>The circle is symmetric about the line</p><ol><li><p>To find a circle with known circle symmetry about a certain line, you only need to determine the position of the center of the circle you are looking for.</p></li><li><p>If two circles are symmetric about a line, the line is the perpendicular bisector of the line joining the centers of the two circles.</p></li></ol></li></ol><hr><h2 id="V-Equation-of-trajectory-and-its-solution"><a href="#V-Equation-of-trajectory-and-its-solution" class="headerlink" title="V. Equation of trajectory and its solution"></a>V. Equation of trajectory and its solution</h2><p>The equation of a trajectory refers to the equation of a curve formed by a moving point that moves according to certain rules.</p><p>There are three general methods to find the equation of the trajectory of a curve: the direct method, the substitution method, and the definition method.</p><h3 id="1-direct-method"><a href="#1-direct-method" class="headerlink" title="1. direct method"></a>1. direct method</h3><p>The steps are as follows.</p><ol><li>Establish the right-angle coordinate system</li><li>let $(x,y)$ denote the moving point $P$ </li><li>equate $x,y$ with the equation</li><li>Simplify the equation. For some cases, special points on the curve may have to be discarded.</li></ol><h3 id="2-substitution-method"><a href="#2-substitution-method" class="headerlink" title="2. substitution method"></a>2. substitution method</h3><p>Generally used to deal with an active point and a passive point</p><p>Simply find the relationship between the coordinates of these two points, and then substitute the equation of the trajectory satisfied by the active point to obtain the equation satisfied by the passive point.</p><h3 id="3-definition-method"><a href="#3-definition-method" class="headerlink" title="3. definition method"></a>3. definition method</h3><p>Firstly, the known conditions and the definition of the curve to get what kind of curve for the trajectory, and then from the standard equation of this kind of curve to find the equation of the trajectory.</p><h3 id="4-Example-questions"><a href="#4-Example-questions" class="headerlink" title="4. Example questions"></a>4. Example questions</h3><p><strong>Example</strong>.</p><p>If a point $P$ moves on a circle $C : x^2+y^2-8 x-6 y+21=0$ and $O$ is the origin, find the equation of the trajectory of the midpoint $M$ of the line $OP$.</p><p><strong>Solution</strong>.</p><ol><li><p><strong>Direct method (this question is solved in the same way as the substitution method)</strong>.</p><p>Let the coordinates of $M$ be $(x,y)$ and the coordinates of the point $P$ be $(x_0,y_0)$, then $x = \frac{x_0}{2}, y = \frac{y_0}{2}$, i.e. $x_0 = 2x,y_0 = 2y$.</p><p>Since the point $P(x_0,y_0)$ is on the circle $C : x^2 + y ^ 2 - 8x - 6y + 21 = 0$</p><p>So $x_0^2 + y_0^2 - 8x_0 - 6y_0 + 21 = 0$, so $(2 x)^2+(2 y)^2-8 \times(2 x)-6 \times(2 y)+21 = 0$.</p><p>That is, the equation of the trajectory of the point $M$ is $x^2 + y^2 - 4x - 3y + \frac{21}{4} = 0$.</p></li><li><p><strong>Definition Method</strong>.</p><p>As shown on the right, let the coordinates of the point $M$ be $(x,y)$ connected to $OC,PC$ and take the terminal $A$ of the line $OC$ and connect $MA$.</p><p><img align=right src="https://raw.githubusercontent.com/q779/blog-img/main/img/202212031333395.png" style="zoom: 15%;" /></p><p>The equation of the circle $C$ can be reduced to $(x - 4) ^ 2 + (y - 3)^2 = 4$ with the center $C$ at $(4,3)$ and $|CP| = 2$, then the coordinates of the point $A$ are $(2,\frac{3}{2})$.</p><p>In $\triangle OCP$, $M,A$ are the midpoints of $OP,OC$, respectively, then $|M A|=\frac{1}{2}|C P|=1$</p><p>When $O,C,P$ are co-linear, $|MA| = 1$, the path of $M$ is a circle with $A$ as the center and $1$ as the radius.</p><p>Therefore, the equation of the trajectory of the point $M$ is $(x - 2)^2 + (y - \frac{3}{2})^2 = 1$.</p></li></ol><hr><h2 id="VI-Maximum-value-of-the-distance-from-a-point-to-a-circle"><a href="#VI-Maximum-value-of-the-distance-from-a-point-to-a-circle" class="headerlink" title="VI. Maximum value of the distance from a point to a circle"></a>VI. Maximum value of the distance from a point to a circle</h2><p>Given a point $P(x_0,y_0)$ (<strong>not necessarily a fixed point</strong>), find the maximum and minimum values of $P$ to a point $Q$ on the circle $C:(x - a)^2 + (y - b)^2 = r^2$.</p><p>The answer is given here first.</p><script type="math/tex; mode=display">\begin{aligned}&d_{\max} = |PO|_{\max} + r\\[6pt]&d_{\min} = |PO|_{\min} - r\end{aligned}</script><p><strong>Certificate</strong>.</p><p><img align=right src="https://raw.githubusercontent.com/q779/blog-img/main/img/202212031659927.png" style="zoom: 20%;" /></p><p>Consider the optimal $Q$ when the $P$ point is fixed, according to the conclusion $Q_0,Q_0^{\prime}$ which corresponds to the location of the $Q$ point when the maximum and minimum values are taken.</p><p>It is easy to find that $|PQ_0| = |PO| + |OQ_1| &gt; |PQ_1|$, so the $Q$ point must be at $Q_0$ when taking the maximum value. $\square$</p><p>It is emphasized here that when fixing $P$, that is, $P$ is not necessarily a fixed point, but for each position of $P$, there exists a corresponding $Q_0$, and the conclusion still holds.</p><hr><h2 id="VII-Expansion-Apollonius-Circle"><a href="#VII-Expansion-Apollonius-Circle" class="headerlink" title="VII. Expansion: Apollonius Circle"></a>VII. Expansion: Apollonius Circle</h2><h3 id="1-definition-reference"><a href="#1-definition-reference" class="headerlink" title="1. definition reference"></a>1. definition reference</h3><blockquote><p>This is not in the scope of the entrance exam, but you can find out about it, and the exam will be given in the form of materials.</p><p>It is recommended to understand only the examples (~~ really someone like me idle to read the Chinese wiki ~~)</p></blockquote><p>The <strong>Apollonios circles</strong> are two related families of circles. Each blue circle of the first circle family is <a href="https://zh.wikipedia.org/wiki/正交">orthogonal</a> to each red circle of the second circle family. These circles form the <a href="https://zh.wikipedia.org/wiki/基_(linear algebra">base</a>) of the <a href="https://zh.wikipedia.org/wiki/雙極坐標系">bipolar coordinate system</a>. <img align=right src="https://raw.githubusercontent.com/q779/blog-img/main/img/202212031705206.png" style="zoom: 33%;" /></p><p>The Apollonios circle is defined by a line segment, label this line segment as $CD$.</p><h4 id="First-Family-Blue-Circle"><a href="#First-Family-Blue-Circle" class="headerlink" title="First Family (Blue Circle)"></a>First Family (Blue Circle)</h4><p>Each circle in the first family is determined by a <strong>positive real number</strong> $r$, and these circles are defined as the trajectories of points $X$ that satisfy the following conditions</p><script type="math/tex; mode=display">\left\{X \mid \frac{d(X, C)}{d(X, D)}=r\right\}</script><p>That is, the ratio of the distance from $X$ to $C$ to the distance from $X$ to $D$ is $r$.</p><p>When $r$ is very close to zero, the corresponding circle will be closer to the side of $C$ and vice versa to the side of $D$.</p><p>When $r=1$, the circle degenerates to the midline of the line $CD$.</p><h4 id="Family-II-red-circle"><a href="#Family-II-red-circle" class="headerlink" title="Family II (red circle)"></a>Family II (red circle)</h4><p>Each circle in the second family is determined by the angle $\vartheta$, and these circles are defined as the trajectories of points $X$ that satisfy the following conditions</p><script type="math/tex; mode=display">\{X \mid \measuredangle C X D=\theta\}</script><p>where $\measuredangle CXD$ denotes the directed angle of CXD. When $\vartheta$ takes all values between $0$ and $\pi$, the above equation generates all circles passing through $C$ and $D$</p><h3 id="2-Example-questions"><a href="#2-Example-questions" class="headerlink" title="2. Example questions"></a>2. Example questions</h3><p>Apollonius was a famous mathematician in ancient Greece, who was called the three giants of mathematics in the Alexandrian period together with Euclid and Archimedes. He had a profound and systematic study of the circular pheasant curve, and his main research results were concentrated in his masterpiece “Theory of the Circular Pheasant Curve”.</p><p>The Apollonius circle is one of his research results and refers to.</p><p>We know that the ratio of the distance between the moving point $M$ and the two fixed points $A, B$ is $\lambda(\lambda&gt;0, \lambda \neq 1)$, then the trajectory of the point $M$ is an Apollonius circle.</p><p>The Apollonius circle is $x^2+y^2=9$ if the ratio of the distance between the moving point $M$ and the two fixed points $A\left(\frac{9}{5}, 0\right), B(5,0)$ is $\frac{3}{5}$.</p><p>In the following, we examine a related issue.</p><p>Given a moving point $M$ on the circle $O: x^2+y^2=1$ and fixed points $A\left(-\frac{1}{2}, 0\right), B(1,1)$, then the minimum of $2|M A|+|M B|$ is _________.</p><p><strong>Solution</strong>.</p><p>As shown, take the point $K(-2,0)$ and connect $OM,MK$. <img align=right src="https://raw.githubusercontent.com/q779/blog-img/main/img/202212031753632.png" style="zoom:25%;" /></p><p>Since $|OM| = 1,|OA| = \frac{1}{2},|OK| = 2$, so $\frac{|OM|}{|OA|} = \frac{|OK|}{|OM|} = 2$.</p><p>And since $\measuredangle MOK= \measuredangle AOM$, so $\triangle MOK \sim \triangle AOM$, then $\frac{|M K|}{|M A|}=\frac{|O M|}{|O A|}=2$, so $|MK| = 2|MA|$.</p><p>So $|M B|+2|M A|=|M B|+|M K|$, and in $\triangle MBK$, $|MB| + |MK|\ge |BK|$, such that</p><script type="math/tex; mode=display">|MB| + 2|MA| = \left(|MB + |MK|\right)_{\min} = |BK| = \sqrt{(-2-1)^2+(0-1)^2} = \sqrt{10}</script><p>Therefore, the answer is $\sqrt{10}$.</p><hr><h2 id="VIII-The-position-relationship-between-a-line-and-a-circle-and-determination"><a href="#VIII-The-position-relationship-between-a-line-and-a-circle-and-determination" class="headerlink" title="VIII. The position relationship between a line and a circle and determination"></a>VIII. The position relationship between a line and a circle and determination</h2><p><img src="https://raw.githubusercontent.com/q779/blog-img/main/img/202212041328587.png" style="zoom:30%;" /></p><p>Judgment method.</p><ol><li><p><strong>Algebraic method</strong>.</p><p>A system of equations is formed by associating the equations of a line with those of a circle, and the system of equations is studied according to the number of solutions<strong> of the </strong>system of equations.</p><ul><li>If $\Delta &gt; 0$, the line intersects the circle.</li><li>If $\Delta = 0$ , then the line is tangent to the circle.</li><li>If $\Delta &lt; 0$, the line is separated from the circle.</li></ul></li><li><p><strong>Geometric method</strong>.</p><p>Just determine the relationship between $d$ and $r$, as shown above ($d$ can be calculated using the point-to-linear distance formula)</p></li></ol><hr><h2 id="IX-The-tangent-line-problem-of-a-circle-and-the-method-of-solving-the-equation-of-the-tangent-line"><a href="#IX-The-tangent-line-problem-of-a-circle-and-the-method-of-solving-the-equation-of-the-tangent-line" class="headerlink" title="IX. The tangent line problem of a circle and the method of solving the equation of the tangent line"></a>IX. The tangent line problem of a circle and the method of solving the equation of the tangent line</h2><p>Analysis of key ideas.</p><ol><li>When a line is tangent to a circle, the conclusion $d=r$ must be used</li><li>When a line $l$ is tangent to a circle $C$, $l \ perp PC$.</li><li>A tangent line from a point $P$ outside the circle to the circle $C$ with tangent point $Q$ must be used to $|PC|^2 = |PQ|^2 + r^2$.</li></ol><p>A friendly reminder: there are many $(x_0,y_0)$ in the following, please do not confuse their meaning.</p><h3 id="1-the-number-of-tangent-lines"><a href="#1-the-number-of-tangent-lines" class="headerlink" title="1. the number of tangent lines"></a>1. the number of tangent lines</h3><p>The tangent line of a circle drawn through a point in the plane.</p><ul><li>If the point is outside the circle, then two tangents to the circle can be made through this point.</li><li>If the point is on a circle, only one tangent line to the circle can be made through this point, and this point is a tangent line.</li><li>If a point is inside a circle, a tangent to the circle cannot be made through this point.</li></ul><h3 id="2-the-equation-of-the-tangent-to-the-circle-through-a-point-outside-the-circle"><a href="#2-the-equation-of-the-tangent-to-the-circle-through-a-point-outside-the-circle" class="headerlink" title="2. the equation of the tangent to the circle through a point outside the circle"></a>2. the equation of the tangent to the circle through a point outside the circle</h3><p>The two tangents to the circle are drawn through <font color=blue>a point outside the circle</font> $P(x_0,y_0)$.</p><ol><li><p><strong> First assume that the slope of the tangent line exists </strong> and is $k$ and that there are two ways to find $k$ as follows.</p><ol><li><p><strong>Geometric method</strong>.</p><p>Let the tangent equation $y - y_0 = k(x - x_0)$ , be reduced to the general equation $kx - y + y_0 - kx_0 = 0$.</p><p>Since the line is tangent to the circle, the distance from the center of the circle to the line is equal to the radius, which leads to $k$.</p></li><li><p><strong>Algebraic method</strong>.</p><p>Let the equation of the tangent line be $y - y_0 = k (x - x_0)$, in conjunction with the equation of the circle $(x - a) ^ 2 + (y - b) ^ 2 = r^2$</p><p>The equation is reduced to a quadratic equation with respect to $x$, and then the discriminant is $0$ to find $k$.</p></li></ol></li><li><p>If only one <strong>slope $k$ is found by the above method</strong>, then the slope of the other tangent line must not exist, and the equation of the other tangent line is then $x = x_0$.</p></li></ol><h3 id="3-the-equation-of-the-tangent-line-with-slope-k-and-tangent-to-a-circle"><a href="#3-the-equation-of-the-tangent-line-with-slope-k-and-tangent-to-a-circle" class="headerlink" title="3. the equation of the tangent line with slope $k$ and tangent to a circle"></a>3. the equation of the tangent line with slope $k$ and tangent to a circle</h3><ol><li><p><strong>Geometric method</strong>.</p><p>First, let the tangent equation be $y = kx + m$ and reduce it to the general equation $kx - y + m = 0$.</p><p>Then use the distance from the center of the circle to the tangent line to equal the radius to find the equation $m$.</p></li><li><p><strong>Algebraic method</strong>.</p><p>Let the equation of the tangent line be $y = kx + m$, and the equation of the circle $(x - a) ^ 2 + (y - b) ^ 2 = r^2$.</p><p>The equation is reduced to a quadratic equation with respect to $x$, and then the discriminant is $0$ to find $m$.</p></li></ol><h3 id="4-the-equation-of-the-tangent-line-of-a-circle-passing-through-a-point-on-the-circle"><a href="#4-the-equation-of-the-tangent-line-of-a-circle-passing-through-a-point-on-the-circle" class="headerlink" title="4. the equation of the tangent line of a circle passing through a point on the circle"></a>4. the equation of the tangent line of a circle passing through a point on the circle</h3><p>Set <font color=red>a point on the circle</font> $Q(x_0,y_0)$ .</p><ol><li><p><strong>Seeking method</strong>.</p><p>First, find the slope of the line connecting the tangent point to the center of the circle $k(k \ne 0)$, then the slope of the tangent line is $-\frac{1}{k}$ by the vertical relationship</p><p>The tangent equation can be obtained from the point-slope equation. If $k = 0$ or the slope does not exist, the tangent equation is obtained directly from the graph.</p></li><li><p><strong>Major findings</strong>.</p><ol><li><p>The equation of the tangent line across the unit circle $x^2 + y^2 = r^2$ is</p><script type="math/tex; mode=display">x_0x + y_0y = r^2</script></li><li><p>over the circle $(x - a)^2 + (y - b) ^ 2 = r ^ 2$, the equation of the tangent line is</p><script type="math/tex; mode=display">(x_0 - a)(x - a) + (y_0 - b)(y - b) = r^2</script></li><li><p>The equation of the tangent line across the circle $x^2 + y^2 + Dx + Ey + F = 0$ is</p><script type="math/tex; mode=display">x_0 x+y_0 y+\frac{D(x_0+x)}{2}+\frac{E(y_0+y)}{2}+F=0</script></li></ol><blockquote><p><strong>Note</strong> that the tangent point chord equation that appears below has the same form as this equation, but the meaning of $(x_0,y_0)$ is different.</p><p>Here $(x_0,y_0)$ refers to the coordinates of a tangent point on the circle, while the latter refers to the coordinates of a point outside the circle.</p></blockquote></li></ol><h3 id="5-equation-of-the-tangent-chord-of-a-circle-and-its-solution"><a href="#5-equation-of-the-tangent-chord-of-a-circle-and-its-solution" class="headerlink" title="5. equation of the tangent chord of a circle and its solution"></a>5. equation of the tangent chord of a circle and its solution</h3><ol><li><p><strong>Tangent chord</strong> Definition: Two tangents to a circle are drawn through a point <strong>outside</strong> the circle, and the line segment through the two tangent points is called the tangent chord of the circle.</p></li><li><p><strong>The equation of the tangent point chord</strong> is found.</p><p>Directly finding the coordinates of the tangent point is extremely arithmetic, and considering <strong> set instead of </strong>.</p><p>That is, set the coordinates of the tangent point, and then use the definition of the equation of the line to find the equation of the line where the two tangent points are located.</p></li><li><p><font color=red><strong>Tangent Point Chord Equation</strong></font>: (You can use it directly for the big question, see <a href="/2022/12/04/yuan-zhui-qu-xian-qie-dian-xian-fang-cheng/">Conic Curve - Tangent Point Chord Equation</a> for the full version)</p><p>The line $AB$ is the chord of the tangent point of the circle $C$ if $P(x_0,y_0)$ is drawn to two tangents $PA,PB$ of the circle $C$ from a point <font color=blue>outside the circle</font>.</p><ol><li><p>The equation of the tangent point chord across the unit circle $x^2 + y^2 = r^2$ is</p><script type="math/tex; mode=display">x_0x+y_0y = r^2</script></li><li><p>Over the circle $(x - a)^2 + (y - b) ^ 2 = r ^ 2$, the equation of the chord of the tangent point is</p><script type="math/tex; mode=display">(x_0 - a)(x - a) + (y_0 - b)(y - b) = r^2</script></li><li><p>The equation of the tangent point chord through the circle $x^2 + y^2 + Dx + Ey + F = 0$ is</p><script type="math/tex; mode=display">x_0 x+y_0 y+\frac{D(x_0+x)}{2}+\frac{E(y_0+y)}{2}+F=0</script></li></ol><blockquote><p><strong>Note</strong> that the tangent point chord formula (in standard equation form) has the same form as the tangent point equation above, but $(x_0,y_0)$ means something different.</p></blockquote></li></ol><h3 id="6-the-method-and-formula-for-finding-the-length-of-the-tangent-to-a-circle"><a href="#6-the-method-and-formula-for-finding-the-length-of-the-tangent-to-a-circle" class="headerlink" title="6. the method and formula for finding the length of the tangent to a circle"></a>6. the method and formula for finding the length of the tangent to a circle</h3><p>After talking so much about the equation equations, let’s look at the tangent length (</p><p>The two tangents to the circle are drawn through <font color=blue>a point outside the circle</font> $P(x_0,y_0)$.</p><ol><li><p><strong>Geometric method</strong>: As shown below, in $\mathrm{Rt}\triangle AOP$ and $\mathrm{Rt}\triangle BOP$, the tangent length $|PA| = |PB| = \sqrt{|PO|^2 - r^2}$.</p><p><img src="https://raw.githubusercontent.com/q779/blog-img/main/img/202212032233128.png" style="zoom:15%;" /></p></li></ol><ol><li><p><strong>Algebraic method</strong>.</p><ol><li><p>The length of the tangent line across the circle $(x - a)^2 + (y - b)^2 = r^2$ is</p><script type="math/tex; mode=display">\sqrt{\left(x_0-a\right)^2+\left(y_0-b\right)^2-r^2}</script></li><li><p>The length of the tangent line across the circle $x^2 + y^2 + Dx + Ey + F$ is</p></li></ol><script type="math/tex; mode=display">\sqrt{x_0^2+y_0^2+D x_0+E y_0+F}</script></li></ol><hr><h2 id="X-Example-of-tangent-line-problem"><a href="#X-Example-of-tangent-line-problem" class="headerlink" title="X. Example of tangent line problem"></a>X. Example of tangent line problem</h2><p><strong>Example 1</strong>.</p><p>Find the equation of the tangent line passing through the point $(1,-7)$ to the circle $x^2 + y^2 = 25$.</p><p><strong>Solution</strong>: (three methods)</p><ol><li><p>It is easy to obtain that $(1,-7)$ is outside the circle and the line $x = 1$ is not a tangent.</p><p>Let the slope of the tangent line be $k$ and the equation of the line is $y + 7 = k(x - 1)$ from the point-slope equation, i.e., $y = k(x-1)-7$.</p><p>Substituting $x^2 + y^2 = 25$ by $\Delta = \left(2 k^2+14 k\right)^2-4\left(k^2+1\right)\left(k^2+14 k+24\right)=0$ yields $k = \frac{4}{3}$ or $k=-\frac{3}{4}$.</p><p>The equation of the tangent line can be obtained by substituting $4x - 3y - 25 = 0$ or $3x+4y + 25 = 0$.</p></li><li><p>It is easy to obtain that $(1,-7)$ is outside the circle and the line $x = 1$ is not tangent.</p><p>Let the slope of the tangent line be $k$ and the equation of the line is $y + 7 = k(x - 1)$ from the point-slope equation, i.e., $kx-y-k-7 = 0$.</p><p>From the tangent property of a circle, we know that the distance from the center of the circle $(0,0)$ to the line is $d = \frac{|0-0-k-7|}{\sqrt{1+k^2}} = r = 5$ </p><p>Then simplifying gives $12k^2 - 7k - 12 = 0$ and solving for $k = \frac{4}{3}$ or $k = -\frac{3}{4}$.</p><p>The equation of the tangent line can be obtained by substituting $4x - 3y - 25 = 0$ or $3x+4y + 25 = 0$.</p></li><li><p>The method is <strong>using the tangent point chord equation</strong> to find the tangent line equation.</p><p>Let the equation of the tangent line be $x_0x + y_0y = 25$, where $(x_0,y_0)$ is the coordinate of the tangent point</p><p>Substituting the coordinates of the point $(1,-7)$, we get $x_0 - 7y_0 = 25$ </p><p>From $\left\{\begin{array}{l}x_0-7 y_0=25 \\x_0^2+y_0^2=25\end{array}\right.$ we get $\left\{\begin{array}{l}x_0 = 4 \\\\ y_0 = -3\end{array}\right.$ or</p><p>Therefore, the equation of the tangent line is $4x - 3y - 25 = 0$ or $3x+4y+25 = 0$.</p></li></ol><p><strong>Example 2</strong>.</p><p>The point $P$ is a moving point on the line $x+y-3=0$, and the tangent line from the point $P$ to the circle $O:x^2 + y^2 = 4$, the length of the tangent line is</p><p><strong>Solution</strong>.</p><p>The tangent length $l = \sqrt{d^2 - r^2} = \sqrt{d^2 - 4}$, examining the value of $d$, it is easy to see that $d$ has only the minimum value.</p><script type="math/tex; mode=display">d_\min = \frac{|1\times 0 + 1\times 0 - 3|}{\sqrt{1^2 + 1^2}} = \frac{3\sqrt{2}}{2}</script><p>Therefore $l \ge \sqrt{d_{\min}^2 - 4} = \frac{\sqrt{2}}{2}$ .</p><p><strong>Example 3</strong>.</p><p>Make two tangents to the circle $C:x^2-4 x+y^2-4 y+5=0$ at the origin $O$. Let the tangents be $A,B$ and find the equation of the line $AB$.</p><p><strong>Solution</strong>.</p><p>The formula is $-2x-2y+5 = 0$, and $-2x+2y-5=0$.</p><hr><h2 id="XI-The-solution-of-the-chord-length-problem-of-a-circle"><a href="#XI-The-solution-of-the-chord-length-problem-of-a-circle" class="headerlink" title="XI. The solution of the chord length problem of a circle"></a>XI. The solution of the chord length problem of a circle</h2><p>Let the equation of the line $l$ be $y = kx + m$ and the equation of the circle $C$ be $(x-a)^2 + (y-b)^2 = r^2$.</p><ol><li><p><strong>Geometric method</strong>: It is easy to know from the figure below that $r^2 = d^2 + \left(\frac{l}{2}\right)^2$ .</p><p><img src="https://raw.githubusercontent.com/q779/blog-img/main/img/202212041724207.png" style="zoom:10%;" /></p></li><li><p><strong>Algebraic method</strong>.</p><p>Form a system of equations between the equation of the line and the equation of the circle, and let the coordinates of the intersection points be $A(x_1,y_1), B(x_2,y_2)$ respectively.</p><ol><li><p>If the coordinates of the intersection point are simple to find, then the formula for the distance between two points is used directly to solve.</p></li><li><p>If the coordinates of the intersection cannot be simply found, then the system of equations $\left\{\begin{array}{l}y = kx + m \\\ (x - a)^2 + (y - b) ^ 2 = r^2\end{array}\right.$ is eliminated to obtain a quadratic equation</p><p>From the relationship between roots and coefficients in a quadratic equation, we have $x_1+x_2,~x_1x_2$ or $y_1 + y_2,~y_1y_2$, then we have</p><p>$\tiny<br>\begin{aligned}|A B| &amp; =\sqrt{\left(x_1-x_2\right)^2+\left(y_1-y_2\right)^2} \[6pt]&amp; =\sqrt{1+k^2}\left|x_1-x_2\right| \[6pt]&amp; =\sqrt{\left(1+k^2\right)\left[\left(x_1+x_2\right)^2-4 x_1 x_2\right]}\end{aligned}$ or $\tiny\begin{aligned}|A B| &amp; =\sqrt{\left(x_1-x_2\right)^2+\left(y_1-y_2\right)^2} \[6pt]&amp; =\sqrt{1+\frac{1}{k^2}}\left|y_1-y_2\right| \[6pt]&amp; =\textstyle\sqrt{\left(1+\frac{1}{k^2}\right)\left[\left(y_1+y_2\right)^2-4 y_1 y_2\right]}\end{aligned}$ （The formula here is not useful）</p><p>The rectification gives $|A B|=\sqrt{1+k^2}\left|x_1-x_2\right|$ or $|A B|=\sqrt{1+\frac{1}{k^2}}\left|y_1-y_2\right|$ (the big question can be used directly)</p></li></ol></li></ol><p><strong>Example 1</strong>.</p><p>The straight line $y=k x+3$ intersects the circle $(x-3)^2+(y-2)^2=4$ at the points $M, N$. If $|M N| \ge 2 \sqrt{3}$, find the range of values of $k$.</p><p><strong>Solution</strong>.</p><p>The center of the circle $(x-3)^2+(y-2)^2=4$ is $(3,2)$ and the radius is $2$.</p><p>The distance $d = \sqrt{2^2-\left(\frac{|M N|}{2}\right)^2} \le 1$ from the center of the circle $(3,2)$ to the line $y = kx + 3$ from $|M N| \ge 2 \sqrt{3}$ </p><p>The linear equation can be reduced to $kx - y + 3 = 0$, so $\frac{|3 k-2+3|}{\sqrt{k^2+1}} \le 1$ is solved by $-\frac{3}{4} \le k \le 0$, i.e. $k \in [-\frac{3}{4},0]$.</p><p><strong>Example 2</strong>.</p><p>Let the line $y = x + 2a$ intersect the circle $C:x^2 + y^2 - 2ay - 2 = 0$ at the points $A,B$, and if $|AB| =2\sqrt{3}$, find the area of the circle $C$.</p><p><strong>Solution</strong>.</p><p>The equation of the straight line can be reduced to $x - y + 2a = 0$ and the equation of the circle can be reduced to $(x-0)^2 + (y-a)^2 = \frac{4 a^2+8}{4}$.</p><p>Since $d = \frac{|0 - a + 2a|}{\sqrt{1^2 + 1^2}} = \frac{a}{\sqrt{2}}$, that is, $d^2 = \frac{a^2}{2}$, and $r^2 - d^2 = \left(\frac{l}{2}\right)^2$, substitute the solution to get $a^2 = 2$.</p><p>Therefore $r^2 = 4$, i.e. $S=\pi r^2 = 4 \pi$.</p><p><strong>Example 3</strong>.</p><p>The straight line $y = kx - 1$ intersects the circle $C : (x + 3) ^ 2 + (y - 3) ^ 2 = 36$ at the points $A,B$. Find the range of values of the length of $AB$.</p><p><strong>Solution</strong>.</p><p>Since the line $y=k x-1$ passes through the fixed point $(0,-1)$ </p><p>So the maximum value of the distance from the center $(-3,3)$ of the circle $C$ to the line $y=k x-1$ is $\sqrt{[0-(-3)]^2+(-1-3)^2}=5$</p><p>The radius of the circle $C$ is $6$, and the minimum value of the length of $A B$ is $2 \sqrt{6^2-5^2}=2 \sqrt{11}$.</p><p>And when the line $y=$ $k x-1$ passes through the center of the circle the length of $A B$ takes the maximum value of the diameter $12$ , so $|A B| \in$ $[2 \sqrt{11}, 12]$ .</p><hr><h2 id="XII-Common-methods-for-solving-the-most-value-problems-associated-with-circles"><a href="#XII-Common-methods-for-solving-the-most-value-problems-associated-with-circles" class="headerlink" title="XII. Common methods for solving the most value problems associated with circles"></a>XII. Common methods for solving the most value problems associated with circles</h2><h3 id="1-use-geometric-properties-to-find-the-most-value"><a href="#1-use-geometric-properties-to-find-the-most-value" class="headerlink" title="1. use geometric properties to find the most value"></a>1. use geometric properties to find the most value</h3><p>To find the maximum and minimum values of a point on a circle to a line, you need to make a vertical line through the center of the circle to the line.</p><p>The longest chord passing through a point inside a circle is the diameter passing through this point, and the chord perpendicular to the longest chord passing through this point is the shortest chord.</p><p>In fact, there is nothing here, is the use of the chord length is also a bit to the distance of the straight line to deal with some problems.</p><h3 id="2-solve-the-most-value-range-of-values-problems-using-the-position-relationship-between-a-line-and-a-circle"><a href="#2-solve-the-most-value-range-of-values-problems-using-the-position-relationship-between-a-line-and-a-circle" class="headerlink" title="2. solve the most value (range of values) problems using the position relationship between a line and a circle"></a>2. solve the most value (range of values) problems using the position relationship between a line and a circle</h3><p>The most value problem in an analytic set is generally based on the conditions to list the objective-function relationship</p><p>Then, according to the characteristics of the function relation, use the parametric method, the matching method, the discriminant method, etc., and apply the inequality to find its most value (range of values).</p><p>For the problem of the most value of a circle, the special geometric properties of the circle are used to solve the problem according to the geometric meaning of Eq.</p><ol><li>The most-valued problem of the form $u = \frac{y - b}{x - a}$ can be transformed into the most-valued problem of the slope of the moving line.</li><li>The most-valued problem of the form $t = ax + by$ can be transformed into a most-valued problem with a moving linear intercept.</li><li>The most-valued problem of the form $(x - a) ^ 2 + (y - b) ^ 2$ can be transformed into the most-valued problem of the square of the distance from the moving point to the fixed point.</li></ol><p><strong>Example 1</strong>.</p><p>The point $P(x, y)$ is known to be on the circle $C: x^2+y^2-6 x-6 y+14=0$.</p><ol><li>Find the maximum and minimum values of $\frac{y}{x}$.</li><li>Find the maximum and minimum values of $x^2+y^2+2 x+3$.</li><li>Find the maximum and minimum values of $x+y$.</li></ol><p><strong>Solution</strong>.</p><p>The equation $x^2+y^2-6 x-6 y+14=0$ can be reduced to $(x-3)^2+(y-$ $3)^2=4$.</p><ol><li><p>$\frac{y}{x}$ denotes the slope of the line connecting the point $P$ on the circle to the origin, as in Figure 1 (below)</p><p>Obviously $P O$ ($O$ is the origin) has the maximum or minimum slope when it is tangent to the circle.</p><p>Let the equation of the tangent line be $y=k x$ (from the question, the slope must exist), that is, $k x-y=0$ </p><p>From the distance from the center of the circle $C(3,3)$ to the tangent line is equal to the radius, we can get $\frac{|3 k-3|}{\sqrt{k^2+1}}=2$ and solve for $k=\frac{9 \pm 2 \sqrt{14}}{5}$</p><p>So the maximum value of $\frac{y}{x}$ is $\frac{9+2 \sqrt{14}}{5}$ and the minimum value is $\frac{9-2 \sqrt{14}}{5}$.</p></li><li><p>$x^2+y^2+2 x+3=(x+1)^2+y^2+2$, which represents the square of the distance from the point $P$ on the circle to $E(-1,0)$ plus $2$ </p><p>Therefore, the equation is maximized or minimized when the distance between the point $P$ and the point $E$ is maximized or minimized.</p><p>As in Figure 2, it is clear that the point $E$ is outside of the circle $C$.</p><p>So the maximum value of the distance between the point $P$ and the point $E$ is $|C E|+2$ and the minimum value of the distance between the point $P$ and the point $E$ is $|C E|-2$.</p><p>And $|C E|=\sqrt{(3+1)^2+3^2}=5$ ,</p><p>So the maximum value of $x^2+y^2+2 x+3$ is $(5+2)^2+2=51$ and the minimum value is $(5-2)^2+2=11$.</p></li><li><p>Let $x+y=b$, then $b$ denotes the intercept of the moving line $y=-x+b$ on the $y$-axis, as in Figure 3.</p><p>Obviously when the moving line $y=-x+b$ is tangent to the circle $(x-3)^2+(y-3)^2=4$, $b$ obtains its maximum or minimum value.</p><p>The distance from the center of the circle $C(3,3)$ to the tangent $x+y=0$ is equal to the radius of the circle</p><p>Then $\frac{|3+3-b|}{\sqrt{1^2+1^2}}=2$, i.e. $|6 - b| = 2\sqrt{2}$, solving for $b = 6\pm 2\sqrt{2}$.</p><p>Thus the maximum value of $x+y$ is $6+2 \sqrt{2}$ and the minimum value is $6-2 \sqrt{2}$.</p></li></ol><p><img src="https://raw.githubusercontent.com/q779/blog-img/main/img/202212052205404.png" style="zoom:30%;" /></p><hr><h2 id="XIII-The-intersection-of-a-line-and-a-circle-intersection-problem"><a href="#XIII-The-intersection-of-a-line-and-a-circle-intersection-problem" class="headerlink" title="XIII. The intersection of a line and a circle intersection problem"></a>XIII. The intersection of a line and a circle intersection problem</h2><p>For problems involving the intersection of a line and a circle, the equations of the line and the circle can be combined to find the coordinates of the two points of intersection by solving the system of equations</p><p>However, when the corresponding system of equations is not easy to solve, the “set but not seek” strategy is often used to transform the whole, that is, first set the coordinates of the two intersection points, but not to find</p><p>Instead, the equation of a line is substituted for the equation of a circle, which is transformed into a quadratic equation by eliminating elements, and then the overall substitution is made using the relationship between roots and coefficients.</p><p><strong>Common Steps</strong>.</p><ol><li>Set the coordinates of the two intersections $P\left(x_1, y_1\right), Q\left(x_2, y_2\right)$.</li><li>use known conditions (e.g., two lines are perpendicular) to derive a relationship for $x_1, x_2, y_1, y_2$ (e.g., $x_1 x_2+y_1 y_2=0$)</li><li>Combine the equation of the line with the equation of the curve, eliminating $y! ! $ (or eliminate $x! $) $! ! $ to get an equation for $x! ! $ (or on $y! $) $! ! $ quadratic equation that computes $\Delta$.</li><li>Use Veda’s theorem to show $x_1+x_2, x_1x_2$ or $y_1+y_2, y_1y_2$.</li><li>Substitute into the relation determined from step 2 and simplify</li><li>verify that $\Delta&gt;0$.</li></ol><p><strong>Example question</strong>.</p><p>Knowing the circle $C: x^2+y^2-2 x+4 y-4=0$, does there exist a line $l$ with slope $1$</p><p>What is the diameter of the circle whose diameter is the chord $A B$ of the circle $C$ intercepted by $l$ passing through the origin? If so, find the equation of the line $l$; if not, state the reason.</p><p><strong>Solution</strong>.</p><p>Let there exist a line $l$ satisfying the problem and the equation $y=x+b$.</p><p>By $\left\{\begin{array}{l}y=x+b, \\\ x^2+y^2-2 x+4 y-4=0\end{array}\right.$ eliminating $y$, we have $2 x^2+2(b+1) x+b^2+4 b-4=0$.</p><p>Let $A\left(x_1, y_1\right), B\left(x_2, y_2\right)$ , then $x_1+x_2=-(b+1), x_1 \cdot x_2=\frac{b^2+4 b-4}{2}$</p><p>Since $y_1 \cdot y_2=\left(x_1+b\right)\left(x_2+b\right)=x_1 \cdot x_2+b\left(x_1+x_2\right)+b^2$, and the circle with $A B$ as its diameter passes through the origin</p><p>So $O A \perp O B$. Therefore, we have $k_{O A} \cdot k_{O B}=-1$, i.e. $x_1x_2+y_1y_2=0$ </p><p>So we have $b^2+3 b-4=0$ and we have $b=1$ or $b=-4$.</p><p>Therefore, there exists a line $l: x-y+1=0$ or $x-y-4=0$ that satisfies the question.</p><hr><h2 id="XIV-The-relationship-between-the-position-of-the-circle-and-the-circle-and-the-judgment-method"><a href="#XIV-The-relationship-between-the-position-of-the-circle-and-the-circle-and-the-judgment-method" class="headerlink" title="XIV. The relationship between the position of the circle and the circle and the judgment method"></a>XIV. The relationship between the position of the circle and the circle and the judgment method</h2><h3 id="1-Types-of-location-relationships"><a href="#1-Types-of-location-relationships" class="headerlink" title="1. Types of location relationships"></a>1. Types of location relationships</h3><p><img src="https://raw.githubusercontent.com/q779/blog-img/main/img/202212071615390.png" style="zoom:50%;" /></p><p>There are five positional relationships between a circle and a circle, as shown in the figure above, where the outer departure and the inner inclusion are collectively called the phase departure, and the outer tangency and the inner tangency are collectively called the phase tangency.</p><h3 id="2-Judgment-method"><a href="#2-Judgment-method" class="headerlink" title="2. Judgment method"></a>2. Judgment method</h3><p>Let the circle $C_1 = (x - a) ^ 2 + (y - b) ^ 2 = r ^ 2$ and the circle $C_2 = (x - c) ^ 2 + (y - d) ^ 2 = R^2$, where $r &lt; R$.</p><ol><li><p><strong>Geometric method</strong>.</p><p>The relationship between the center distance $d$ and the radius $r,R$ of the two circles is determined.</p><ul><li>Outward departure: $d &gt; R + r$</li><li>External tangent: $d = R + r$ </li><li>Intersection: $R - r &lt; d &lt; R + r$ </li><li>Inner cut: $d = R - r$ </li><li>Contains: $d &lt; R - r$</li></ul></li><li><p><strong>Algebraic method</strong>: (obviously this method is more complex)</p><p>The number of solutions to the system of equations can be determined by combining the two circular equations.</p><ul><li>When $\Delta &gt; 0$, the two circles have $2$ common points and intersect.</li><li>When $\Delta = 0$, the two circles have $1$ common points, including the inner and outer tangents (tangent).</li><li>When $\Delta &lt; 0$, the two circles have no common points, including the inner and outer departures (phase departures).</li></ul></li></ol><p><strong>Example</strong>.</p><p>If the circle $C_1: x^2 + y^2 - 2ax + 4y + a^2 - 5 = 0$, then</p><p>Intersect the circle $C_2: x^2+y^2+2 x-2 a y+a^2-3=0$ and find the range of values of $a$.</p><p><strong>Solution</strong>.</p><p>First write it in the form of the standard equation, $C_1:(x-a)^2+(y+2)^2=9,~ C_2:(x+1)^2+(y-a)^2=4$ .</p><p>Then the centers and radii of the two circles are $C_1(a,-2), r_1 = 3, and C_2(-1,a), r_2 = 2$ respectively.</p><p>Let the distance between the two circles be $d$, then $d^2 = (a + 1) ^ 2 + (- 2 - a) ^ 2 = 2a^2 + 6a + 5$.</p><p>Because it is tangent, $3 - 2 &lt; d &lt; 3 + 2 \Rightarrow 1 &lt; d &lt; 5$, then $a \in (-5, -2) \cup (-1,2)$.</p><hr><h2 id="XV-The-common-tangent-of-two-circles"><a href="#XV-The-common-tangent-of-two-circles" class="headerlink" title="XV. The common tangent of two circles"></a>XV. The common tangent of two circles</h2><p><img src="https://raw.githubusercontent.com/q779/blog-img/main/img/202212052258051.png" style="zoom:40%;" /></p><p>The tangent of two circles is the line tangent to two circles, which can be divided into outer and inner tangents.</p><ul><li><p>If two circles are on the same side of a common tangent line, call this common tangent line the outer tangent line of the two circles. (<font color=blue>blue</font>)</p></li><li><p>If two circles are on each side of a tangent line, call this tangent line the inner tangent line of the two circles. (<font color=green>green</font>)</p></li></ul><p>As shown above, it can also be organized in the form of the following table. To determine the number of tangents is essentially to determine the relationship between the positions of the two circles.</p><script type="math/tex; mode=display">\begin{array}{|c|c|c|c|}\hline \texttt{position relation} & \texttt{outer common tangent} & \texttt{inner common tangent} & \texttt{total number of common tangents}\\[6pt]\hline \texttt{outside away} & 2 & 2 & 4\\[6pt]\hline \texttt{external cut} & 2 & 1 & 3\\[6pt]\hline \texttt{intersecting} & 2 & 0 & 2\\[6pt]\hline \texttt{internal cut} & 1 & 0 & 1\\[6pt]\hline \texttt{included} & 0 & 0 & 0\\[6pt]\hline\end{array}</script><p>Memorization method: Subtract from the inner common tangent first, then from the outer common tangent.</p><p><strong>Solution of the equation of the common tangent</strong>.</p><p>When finding the equation of the tangent line of two circles, we must first determine the position of the two circles, so as to determine the number of tangents</p><p>Then using the method of coefficients to be determined, let the equation of the common tangent be $y = kx + b$ (note that the special judgment slope does not exist)</p><p>Finally, the system of equations for $k,b$ is obtained from the tangency condition, and the values of $k,b$ can be found.</p><hr><h2 id="XVI-two-circles-tangent-problem"><a href="#XVI-two-circles-tangent-problem" class="headerlink" title="XVI, two circles tangent problem"></a>XVI, two circles tangent problem</h2><p>Properties commonly used when two circles are tangent to each other.</p><ol><li>Let the centers of the two circles be $O_1,O_2$ and the radii be $r_1,r_2$, then the two circles are tangent with $\left\{\begin{array}{l}\texttt{internal tangent} \Leftrightarrow\left|O_1 O_2\right|=\left|r_1-r_2\right|\\\texttt{external tangent}</li><li>When two circles are tangent, <strong>the line connecting the centers of the two circles passes through the tangent point</strong> (if the two circles intersect, the line connecting the centers of the two circles bisects the common chord perpendicularly)</li></ol><p>Applying these properties in the process of solving problems can sometimes simplify operations considerably.</p><p>To deal with the problem of tangency of two circles, we must first accurately grasp whether the tangency is internal or external</p><p>If we just tell the two circles are tangent, we must discuss the two cases of tangency and externality.</p><p>Second, the problem of tangency of two circles is transformed into “the distance between the centers of two circles” is equal to $|r_1 - r_2|$ or $r_1 + r_2$”.</p><p><strong>Example question</strong>.</p><p>Known circle $C_1: x^2+y^2+2 a x+a^2-4=0~(a \in \mathbb{R})$ </p><p>with the circle $C_2:x^2 + y^2 - 2by - 1 + b ^ 2 = 0~ ( b \in \mathbb{R})$ having only one common tangent, find $(a + b)_{\min}$.</p><p><strong>Solution</strong>.</p><p>It is easy to know that $C_1(-a,0)$ with radius $r_1 = 2$ and $C_2(0,b)$ with radius $r_2 = 1$.</p><p>From the fact that two circles have only one tangent line, we can get two circles are tangent to each other with the distance $|C_1C_2| = \sqrt{a^2 + b^2} = 2 - 1 = 1$, so the two circles are tangent to each other.</p><p>So it follows that $a^2 + b^2 = 1$ and let $a = \cos \alpha, b = \sin \alpha~(\alpha \in \mathbb{R})$ , then</p><script type="math/tex; mode=display">a+b=\sqrt{2} \sin \left(\alpha+\frac{\pi}{4}\right) \in[-\sqrt{2}, \sqrt{2}]</script><p>$(a+b)_{\min} = -\sqrt{2}$ when and only when $\alpha + \frac{\pi}{4} = -\frac{\pi}{2} + 2k\pi,~k \in \mathbb{Z}$, i.e., $\alpha = -\frac{3}{4}\pi + 2k\pi,~k \in \mathbb{Z}$.</p><hr><h2 id="XVII-Two-circles-common-chord-problem"><a href="#XVII-Two-circles-common-chord-problem" class="headerlink" title="XVII. Two circles common chord problem"></a>XVII. Two circles common chord problem</h2><h3 id="1-find-the-equation-of-the-line-where-the-common-chord-of-two-circles-lies"><a href="#1-find-the-equation-of-the-line-where-the-common-chord-of-two-circles-lies" class="headerlink" title="1. find the equation of the line where the common chord of two circles lies"></a>1. find the equation of the line where the common chord of two circles lies</h3><p>Off-topic, the line where this common string is located is called the common cut.</p><p>Let the circle $C_1 : x^2+y^2+D_1 x+E_1 y+F_1=0$ and the circle $C_2: x^2+y^2+D_2 x+E_2 y+F_2=0$.</p><p><strong>Conclusion</strong>: If the circle $C_1$ intersects the circle $C_2$, the equation of the common divisor of the two circles is the subtraction of the equation of the two circles</p><script type="math/tex; mode=display">\left(D_1-D_2\right) x+\left(E_1-E_2\right) y+F_1-F_2=0</script><p>It should be noted that both circles are in the form of general equations, so don’t subtract the wrong one.</p><blockquote><p>How to understand this equation? We assume that the point $P(x_0,y_0)$ is one of the intersection points.</p><p>then $P_0$ must fit the equation of the two circles, and the two equations can be subtracted</p><script type="math/tex; mode=display">\left(D_1-D_2\right) x_0+\left(E_1-E_2\right) y_0+F_1-F_2=0</script><p>Therefore, the point $P$ fits into the original linear equation. The same proof is obtained by doing the same for the other intersection point.</p></blockquote><h3 id="2-the-method-of-finding-the-common-chord-length-of-two-circles"><a href="#2-the-method-of-finding-the-common-chord-length-of-two-circles" class="headerlink" title="2. the method of finding the common chord length of two circles"></a>2. the method of finding the common chord length of two circles</h3><ol><li><p><strong>Algebraic method</strong>.</p><p>Combine the equations of the two circles, solve for the coordinates of the two points of intersection, and use the formula for the distance between the two points to find the common chord length.</p></li><li><p><strong>Geometric method</strong>.</p><p>Find the equation of the line where the common chord is located. Use the right triangle formed by the radius of the circle, the half chord length, and the chord distance to find the chord length by the Pythagorean theorem.</p></li></ol><hr><h2 id="XVIII-The-equation-of-the-circle-system-and-its-application-skills"><a href="#XVIII-The-equation-of-the-circle-system-and-its-application-skills" class="headerlink" title="XVIII. The equation of the circle system and its application skills"></a>XVIII. The equation of the circle system and its application skills</h2><ol><li><p>equation of the concentric circle system.</p><p>Standard equation.</p><script type="math/tex; mode=display">(x-a)^2+(y-b)^2=\lambda^2</script><p>General equation.</p><script type="math/tex; mode=display">x^2+y^2+D x+E y+\lambda=0</script></li><li><p>The equation of the system of circles at the same fixed point $(a,b)$ is</p><script type="math/tex; mode=display">(x - a) ^ 2 + (y - b) ^ 2 + c_1(x - a) + c_2(y - b) = 0</script></li><li><p>The equation of the system of circles at the intersection of the line $Ax + By + C = 0$ and the circle $x^2 + y^2 + Dx + Ey + F = 0$ is</p><script type="math/tex; mode=display">x^2 + y^2 + Dx + Ey + F + \lambda(Ax + By + C) = 0</script><p>The equation is understood in the same way as the common cut equation.</p></li><li><p>The equation of the <strong>circle system</strong> over the intersection of two circles (both general equations) is</p><script type="math/tex; mode=display">\begin{aligned}x^2 + y^2 + D_1x + E_1y + F_1 + \lambda(x^2 + y^2 + D_2x + E_2 + F_2) = 0 && \lambda \ne -1\end{aligned}</script><p>In particular, this formula is used when two circles are <strong>tangent</strong> (inner + outer tangent) and $l$ is the equation of the line passing through the common tangent point of the two circles.</p></li></ol><hr><p><strong>Reference</strong>.</p><p>[1] <a href="https://zh.wikipedia.org/wiki/%E9%98%BF%E6%B3%A2%E7%BE%85%E5%B0%BC%E5%A5%A7%E6%96%AF%E5%9C%93">Apollonios circle - Wikipedia, the free encyclopedia</a> </p><p>[2] <a href="https://tiku.yixuela.com/know/209">Summary of knowledge points of tangent equation of a circle _Related videos and test questions online practice_Easy to learn</a> </p>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Math </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
